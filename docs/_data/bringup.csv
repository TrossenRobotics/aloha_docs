Argument,Description,Default,Choices
robot_model_leader,model type of the leader arms.,``aloha_wx250s``,
robot_model_follower,model type of the follower arms.,``aloha_vx300s``,
robot_name_leader_left,name of the left leader arm,``leader_left``,
robot_name_leader_right,name of the right leader arm,``leader_right``,
robot_name_follower_left,name of the left follower arm,``follower_left``,
robot_name_follower_right,name of the right follower arm,``follower_right``,
leader_modes_left,the file path to the 'mode config' YAML file for the left leader arm.,LocalVar('FindPackageShare\(pkg= ``aloha``\) + 'config' + 'leader_modes_left.yaml''),
leader_modes_right,the file path to the 'mode config' YAML file for the right leader arm.,LocalVar('FindPackageShare\(pkg= ``aloha``\) + 'config' + 'leader_modes_right.yaml''),
follower_modes_left,the file path to the 'mode config' YAML file for the left follower arm.,LocalVar('FindPackageShare\(pkg= ``aloha``\) + 'config' + 'follower_modes_left.yaml''),
follower_modes_right,the file path to the 'mode config' YAML file for the right follower arm.,LocalVar('FindPackageShare\(pkg= ``aloha``\) + 'config' + 'follower_modes_right.yaml''),
launch_leaders,"if ``true``, launches both the leader and follower arms; if ``false, just the followers are launched.",``true``,"``true``, ``false``"
use_cameras,"if ``true``, launches the camera drivers.",``true``,"``true``, ``false``"
cam_high_name,,``cam_high``,
cam_low_name,,``cam_low``,
cam_left_wrist_name,,``cam_left_wrist``,
cam_right_wrist_name,,``cam_right_wrist``,
is_mobile,,EnvVar\(``INTERBOTIX_ALOHA_IS_MOBILE``\),"``true``, ``false``"
use_base,"if ``true``, launches the driver for the SLATE base.",LaunchConfig\(``is_mobile``\),"``true``, ``false``"
use_joystick_teleop,"if ``true``, launches a joystick teleop node for the base.",LaunchConfig\(``use_base``\),"``true``, ``false``"
use_aloha_rviz,"One of: ('true', 'false')",``false``,
aloha_rvizconfig,,LocalVar('FindPackageShare\(pkg= ``aloha``\) + 'rviz' + 'aloha.rviz''),
base_link_frame,"name of the 'root' link on the arm; typically ``base_link``, but can be changed if attaching the arm to a mobile base that already has a ``base_link`` frame.",``base_link``,
use_gripper,"if ``true``, the default gripper is included in the ``robot_description``; if ``false``, it is left out; set to ``false`` if not using the default gripper.",``true``,"``true``, ``false``"
show_ar_tag,"if ``true``, the AR tag mount is included in the ``robot_description``; if ``false``, it is left out; set to ``true`` if using the AR tag mount in your project.",``false``,"``true``, ``false``"
show_gripper_bar,"if ``true``, the gripper_bar link is included in the ``robot_description``; if ``false``, the gripper_bar and finger links are not loaded. Set to ``false`` if you have a custom gripper attachment.",``true``,"``true``, ``false``"
show_gripper_fingers,"if ``true``, the gripper fingers are included in the ``robot_description``; if ``false``, the gripper finger links are not loaded. Set to ``false`` if you have custom gripper fingers.",``true``,"``true``, ``false``"
use_world_frame,"set this to ``true`` if you would like to load a 'world' frame to the ``robot_description`` which is located exactly at the 'base_link' frame of the robot; if using multiple robots or if you would like to attach the 'base_link' frame of the robot to a different frame, set this to ``false``.",``false``,"``true``, ``false``"
external_urdf_loc,the file path to the custom urdf.xacro file that you would like to include in the Interbotix robot's urdf.xacro file.,'',
hardware_type,"configures the ``robot_description`` to use the actual hardware, fake hardware, or hardware simulated in Gazebo.",``actual``,"``actual``, ``fake``, ``gz_classic``"
robot_description_leader_left,URDF of the robot; this is typically generated by the xacro command.,Command(FindExec\(``xacro``\) + ' ' + LocalVar('FindPackageShare\(pkg= ``interbotix_xsarm_descriptions``\) + 'urdf' + LaunchConfig\(``robot_model_leader``\)') + '.urdf.xacro ' + 'robot_name:=' + LaunchConfig\(``robot_name_leader_left``\) + ' ' + 'base_link_frame:=' + LaunchConfig\(``base_link_frame``\) + ' ' + 'use_gripper:=' + LaunchConfig\(``use_gripper``\) + ' ' + 'show_ar_tag:=' + LaunchConfig\(``show_ar_tag``\) + ' ' + 'show_gripper_bar:=' + LaunchConfig\(``show_gripper_bar``\) + ' ' + 'show_gripper_fingers:=' + LaunchConfig\(``show_gripper_fingers``\) + ' ' + 'use_world_frame:=' + LaunchConfig\(``use_world_frame``\) + ' ' + 'external_urdf_loc:=' + LaunchConfig\(``external_urdf_loc``\) + ' ' + 'hardware_type:=' + LaunchConfig\(``hardware_type``\) + ' '),
robot_description_leader_right,URDF of the robot; this is typically generated by the xacro command.,Command(FindExec\(``xacro``\) + ' ' + LocalVar('FindPackageShare\(pkg= ``interbotix_xsarm_descriptions``\) + 'urdf' + LaunchConfig\(``robot_model_leader``\)') + '.urdf.xacro ' + 'robot_name:=' + LaunchConfig\(``robot_name_leader_right``\) + ' ' + 'base_link_frame:=' + LaunchConfig\(``base_link_frame``\) + ' ' + 'use_gripper:=' + LaunchConfig\(``use_gripper``\) + ' ' + 'show_ar_tag:=' + LaunchConfig\(``show_ar_tag``\) + ' ' + 'show_gripper_bar:=' + LaunchConfig\(``show_gripper_bar``\) + ' ' + 'show_gripper_fingers:=' + LaunchConfig\(``show_gripper_fingers``\) + ' ' + 'use_world_frame:=' + LaunchConfig\(``use_world_frame``\) + ' ' + 'external_urdf_loc:=' + LaunchConfig\(``external_urdf_loc``\) + ' ' + 'hardware_type:=' + LaunchConfig\(``hardware_type``\) + ' '),
robot_description_follower_left,URDF of the robot; this is typically generated by the xacro command.,Command(FindExec\(``xacro``\) + ' ' + LocalVar('FindPackageShare\(pkg= ``interbotix_xsarm_descriptions``\) + 'urdf' + LaunchConfig\(``robot_model_follower``\)') + '.urdf.xacro ' + 'robot_name:=' + LaunchConfig\(``robot_name_follower_left``\) + ' ' + 'base_link_frame:=' + LaunchConfig\(``base_link_frame``\) + ' ' + 'use_gripper:=' + LaunchConfig\(``use_gripper``\) + ' ' + 'show_ar_tag:=' + LaunchConfig\(``show_ar_tag``\) + ' ' + 'show_gripper_bar:=' + LaunchConfig\(``show_gripper_bar``\) + ' ' + 'show_gripper_fingers:=' + LaunchConfig\(``show_gripper_fingers``\) + ' ' + 'use_world_frame:=' + LaunchConfig\(``use_world_frame``\) + ' ' + 'external_urdf_loc:=' + LaunchConfig\(``external_urdf_loc``\) + ' ' + 'hardware_type:=' + LaunchConfig\(``hardware_type``\) + ' '),
robot_description_follower_right,URDF of the robot; this is typically generated by the xacro command.,Command(FindExec\(``xacro``\) + ' ' + LocalVar('FindPackageShare\(pkg= ``interbotix_xsarm_descriptions``\) + 'urdf' + LaunchConfig\(``robot_model_follower``\)') + '.urdf.xacro ' + 'robot_name:=' + LaunchConfig\(``robot_name_follower_right``\) + ' ' + 'base_link_frame:=' + LaunchConfig\(``base_link_frame``\) + ' ' + 'use_gripper:=' + LaunchConfig\(``use_gripper``\) + ' ' + 'show_ar_tag:=' + LaunchConfig\(``show_ar_tag``\) + ' ' + 'show_gripper_bar:=' + LaunchConfig\(``show_gripper_bar``\) + ' ' + 'show_gripper_fingers:=' + LaunchConfig\(``show_gripper_fingers``\) + ' ' + 'use_world_frame:=' + LaunchConfig\(``use_world_frame``\) + ' ' + 'external_urdf_loc:=' + LaunchConfig\(``external_urdf_loc``\) + ' ' + 'hardware_type:=' + LaunchConfig\(``hardware_type``\) + ' '),
use_gravity_compensation,"if ``true``, launches the gravity compensation node.",``true``,"``true``, ``false``"
leader_motor_specs_left,the file path to the 'motor specs' YAML file for the left leader arm.,LocalVar('FindPackageShare\(pkg= ``aloha``\) + 'config' + 'leader_motor_specs_left.yaml''),
leader_motor_specs_right,the file path to the 'motor specs' YAML file for the right leader arm.,LocalVar('FindPackageShare\(pkg= ``aloha``\) + 'config' + 'leader_motor_specs_right.yaml''),
